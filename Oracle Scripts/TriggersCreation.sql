DROP SEQUENCE SEQ_ACTION;
CREATE SEQUENCE SEQ_ACTION
START WITH 1
INCREMENT BY 1
NOMAXVALUE
NOMINVALUE
NOCYCLE
NOCACHE
ORDER;

CREATE OR REPLACE TRIGGER beforeInsertADMIN_USER
BEFORE INSERT
ON  ADMIN_USER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', ' ADMIN_USER', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertADMIN_USER;
/
CREATE OR REPLACE TRIGGER beforeUpdateADMIN_USER
BEFORE UPDATE
ON  ADMIN_USER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', ' ADMIN_USER', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdateADMIN_USER; 
/
CREATE OR REPLACE TRIGGER beforeDeleteADMIN_USER
BEFORE DELETE
ON  ADMIN_USER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', ' ADMIN_USER', USER);
END beforeDeleteADMIN_USER;
/
CREATE OR REPLACE TRIGGER beforeInsertANML_CLASS
BEFORE INSERT
ON ANML_CLASS
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', 'ANML_CLASS', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertANML_CLASS;
/
CREATE OR REPLACE TRIGGER beforeUpdateANML_CLASS
BEFORE UPDATE
ON ANML_CLASS
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', 'ANML_CLASS', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdateANML_CLASS; 
/
CREATE OR REPLACE TRIGGER beforeDeleteANML_CLASS
BEFORE DELETE
ON ANML_CLASS
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', 'ANML_CLASS', USER);
END beforeDeleteANML_CLASS;
/
CREATE OR REPLACE TRIGGER beforeInsertANML_FAMILY
BEFORE INSERT
ON ANML_FAMILY
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', 'ANML_FAMILY', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertANML_FAMILY;
/
CREATE OR REPLACE TRIGGER beforeUpdateANML_FAMILY
BEFORE UPDATE
ON ANML_FAMILY
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', 'ANML_FAMILY', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdateANML_FAMILY; 
/
CREATE OR REPLACE TRIGGER beforeDeleteANML_FAMILY
BEFORE DELETE
ON ANML_FAMILY
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', 'ANML_FAMILY', USER);
END beforeDeleteANML_FAMILY;
/
CREATE OR REPLACE TRIGGER beforeInsertANML_GENDER
BEFORE INSERT
ON ANML_GENDER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', 'ANML_GENDER', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertANML_GENDER;
/
CREATE OR REPLACE TRIGGER beforeUpdateANML_GENDER
BEFORE UPDATE
ON ANML_GENDER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', 'ANML_GENDER', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdateANML_GENDER; 
/
CREATE OR REPLACE TRIGGER beforeDeleteANML_GENDER
BEFORE DELETE
ON ANML_GENDER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', 'ANML_GENDER', USER);
END beforeDeleteANML_GENDER;
/
CREATE OR REPLACE TRIGGER beforeInsertANML_ORDER
BEFORE INSERT
ON ANML_ORDER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', 'ANML_ORDER', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertANML_ORDER;
/
CREATE OR REPLACE TRIGGER beforeUpdateANML_ORDER
BEFORE UPDATE
ON ANML_ORDER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', 'ANML_ORDER', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdateANML_ORDER; 
/
CREATE OR REPLACE TRIGGER beforeDeleteANML_ORDER
BEFORE DELETE
ON ANML_ORDER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', 'ANML_ORDER', USER);
END beforeDeleteANML_ORDER;
/
CREATE OR REPLACE TRIGGER beforeInsertANML_SUBORDER
BEFORE INSERT
ON ANML_SUBORDER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', 'ANML_SUBORDER', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertANML_SUBORDER;
/
CREATE OR REPLACE TRIGGER beforeUpdateANML_SUBORDER
BEFORE UPDATE
ON ANML_SUBORDER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', 'ANML_SUBORDER', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdateANML_SUBORDER; 
/
CREATE OR REPLACE TRIGGER beforeDeleteANML_SUBORDER
BEFORE DELETE
ON ANML_SUBORDER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', 'ANML_SUBORDER', USER);
END beforeDeleteANML_SUBORDER;
/
CREATE OR REPLACE TRIGGER beforeInsertANML_SPECIE
BEFORE INSERT
ON ANML_SPECIE
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', 'ANML_SPECIE', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertANML_SPECIE;
/
CREATE OR REPLACE TRIGGER beforeUpdateANML_SPECIE
BEFORE UPDATE
ON ANML_SPECIE
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', 'ANML_SPECIE', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdateANML_SPECIE; 
/
CREATE OR REPLACE TRIGGER beforeDeleteANML_SPECIE
BEFORE DELETE
ON ANML_SPECIE
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', 'ANML_SPECIE', USER);
END beforeDeleteANML_SPECIE;
/
CREATE OR REPLACE TRIGGER beforeInsertBINNACLE
BEFORE INSERT
ON BINNACLE
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', 'BINNACLE', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertBINNACLE;
/
CREATE OR REPLACE TRIGGER beforeUpdateBINNACLE
BEFORE UPDATE
ON BINNACLE
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', 'BINNACLE', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdateBINNACLE; 
/
CREATE OR REPLACE TRIGGER beforeDeleteBINNACLE
BEFORE DELETE
ON BINNACLE
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', 'BINNACLE', USER);
END beforeDeleteBINNACLE;
/
CREATE OR REPLACE TRIGGER beforeInsertCANTON
BEFORE INSERT
ON CANTON
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', 'CANTON', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertCANTON;
/
CREATE OR REPLACE TRIGGER beforeUpdateCANTON
BEFORE UPDATE
ON CANTON
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', 'CANTON', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdateCANTON; 
/
CREATE OR REPLACE TRIGGER beforeDeleteCANTON
BEFORE DELETE
ON CANTON
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', 'CANTON', USER);
END beforeDeleteCANTON;
/
CREATE OR REPLACE TRIGGER beforeInsertCONTINENT
BEFORE INSERT
ON CONTINENT
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', 'CONTINENT', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertCONTINENT;
/
CREATE OR REPLACE TRIGGER beforeUpdateCONTINENT
BEFORE UPDATE
ON CONTINENT
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', 'CONTINENT', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdateCONTINENT; 
/
CREATE OR REPLACE TRIGGER beforeDeleteCONTINENT
BEFORE DELETE
ON CONTINENT
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', 'CONTINENT', USER);
END beforeDeleteCONTINENT;
/
CREATE OR REPLACE TRIGGER beforeInsertCOUNTRY
BEFORE INSERT
ON COUNTRY
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', 'COUNTRY', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertCOUNTRY;
/
CREATE OR REPLACE TRIGGER beforeUpdateCOUNTRY
BEFORE UPDATE
ON COUNTRY
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', 'COUNTRY', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdateCOUNTRY; 
/
CREATE OR REPLACE TRIGGER beforeDeleteCOUNTRY
BEFORE DELETE
ON COUNTRY
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', 'COUNTRY', USER);
END beforeDeleteCOUNTRY;
/
CREATE OR REPLACE TRIGGER beforeInsertDISTRICT
BEFORE INSERT
ON DISTRICT
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', 'DISTRICT', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertDISTRICT;
/
CREATE OR REPLACE TRIGGER beforeUpdateDISTRICT
BEFORE UPDATE
ON DISTRICT
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', 'DISTRICT', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdateDISTRICT; 
/
CREATE OR REPLACE TRIGGER beforeDeleteDISTRICT
BEFORE DELETE
ON DISTRICT
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', 'DISTRICT', USER);
END beforeDeleteDISTRICT;
/
CREATE OR REPLACE TRIGGER beforeInsertIMAGE
BEFORE INSERT
ON IMAGE
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', 'IMAGE', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertIMAGE;
/
CREATE OR REPLACE TRIGGER beforeUpdateIMAGE
BEFORE UPDATE
ON IMAGE
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', 'IMAGE', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdateIMAGE; 
/
CREATE OR REPLACE TRIGGER beforeDeleteIMAGE
BEFORE DELETE
ON IMAGE
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', 'IMAGE', USER);
END beforeDeleteIMAGE;
/
CREATE OR REPLACE TRIGGER beforeInsertPROVINCE
BEFORE INSERT
ON PROVINCE
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', 'PROVINCE', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertPROVINCE;
/
CREATE OR REPLACE TRIGGER beforeUpdatePROVINCE
BEFORE UPDATE
ON PROVINCE
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', 'PROVINCE', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdatePROVINCE; 
/
CREATE OR REPLACE TRIGGER beforeDeletePROVINCE
BEFORE DELETE
ON PROVINCE
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', 'PROVINCE', USER);
END beforeDeletePROVINCE;
/
CREATE OR REPLACE TRIGGER beforeInsertRATEXUSER
BEFORE INSERT
ON RATEXUSER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', 'RATEXUSER', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertRATEXUSER;
/
CREATE OR REPLACE TRIGGER beforeUpdateRATEXUSER
BEFORE UPDATE
ON RATEXUSER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', 'RATEXUSER', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdateRATEXUSER; 
/
CREATE OR REPLACE TRIGGER beforeDeleteRATEXUSER
BEFORE DELETE
ON RATEXUSER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', 'RATEXUSER', USER);
END beforeDeleteRATEXUSER;
/
CREATE OR REPLACE TRIGGER beforeInsertSIGHT
BEFORE INSERT
ON SIGHT
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', 'SIGHT', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertSIGHT;
/
CREATE OR REPLACE TRIGGER beforeUpdateSIGHT
BEFORE UPDATE
ON SIGHT
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', 'SIGHT', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdateSIGHT; 
/
CREATE OR REPLACE TRIGGER beforeDeleteSIGHT
BEFORE DELETE
ON SIGHT
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', 'SIGHT', USER);
END beforeDeleteSIGHT;
/
CREATE OR REPLACE TRIGGER beforeInsertSYSTEM_PARAMETERS
BEFORE INSERT
ON SYSTEM_PARAMETERS
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', 'SYSTEM_PARAMETERS', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertSYSTEM_PARAMETERS;
/
CREATE OR REPLACE TRIGGER beforeUpdateSYSTEM_PARAMETERS
BEFORE UPDATE
ON SYSTEM_PARAMETERS
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', 'SYSTEM_PARAMETERS', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdateSYSTEM_PARAMETERS; 
/
CREATE OR REPLACE TRIGGER beforeDeleteSYSTEM_PARAMETERS
BEFORE DELETE
ON SYSTEM_PARAMETERS
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', 'SYSTEM_PARAMETERS', USER);
END beforeDeleteSYSTEM_PARAMETERS;
/
CREATE OR REPLACE TRIGGER beforeInsertSYSTEM_USER
BEFORE INSERT
ON SYSTEM_USER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'INSERT', 'SYSTEM_USER', USER);
    :NEW.DATE_CREATION:=SYSDATE;
    :NEW.USER_CREATION:=USER;
END beforeInsertSYSTEM_USER;
/
CREATE OR REPLACE TRIGGER beforeUpdateSYSTEM_USER
BEFORE UPDATE
ON SYSTEM_USER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'UPDATE', 'SYSTEM_USER', USER);
    :NEW.DATE_MODIFICATION:=SYSDATE;
    :NEW.USER_MODIFICATION:=USER;
END beforeUpdateSYSTEM_USER; 
/
CREATE OR REPLACE TRIGGER beforeDeleteSYSTEM_USER
BEFORE DELETE
ON SYSTEM_USER
FOR EACH ROW
BEGIN
    INSERT INTO ACTION_HISTORY(ACTION_DATE, ACTION_ID, ACTION_NAME, TABLE_NAME, USER_NAME)
        VALUES(SYSDATE, SEQ_ACTION.NEXTVAL, 'DELETE', 'SYSTEM_USER', USER);
END beforeDeleteSYSTEM_USER;
/